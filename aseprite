#!/bin/bash

printf " \e[49m    \e[48;5;0m                        \e[49m    \e[m
 \e[49m  \e[48;5;0m   \e[38;5;15;48;5;0mâ–„â–„â–„â–„â–„â–„â–„â–„â–„â–„â–„â–„â–„â–„â–„â–„â–„â–„â–„â–„â–„â–„\e[48;5;0m   \e[49m  \e[m
 \e[48;5;0m   \e[38;5;15;48;5;0mâ–„â–„\e[48;5;15m                      \e[38;5;15;48;5;0mâ–„â–„\e[48;5;0m \e[38;5;0;49mâ–„â–„\e[m
 \e[48;5;0m   \e[48;5;15m                          \e[48;5;0m   \e[m
 \e[48;5;0m   \e[48;5;15m      \e[38;5;233;48;5;15mâ–„â–„â–„\e[48;5;15m        \e[38;5;233;48;5;15mâ–„â–„â–„\e[48;5;15m      \e[48;5;0m   \e[m
 \e[48;5;0m   \e[48;5;15m      \e[48;5;0m   \e[48;5;15m        \e[48;5;0m   \e[48;5;15m      \e[48;5;0m   \e[m
 \e[48;5;0m   \e[48;5;15m      \e[48;5;0m   \e[48;5;15m        \e[48;5;0m   \e[48;5;15m      \e[48;5;0m   \e[m
 \e[48;5;0m   \e[48;5;15m      \e[48;5;0m   \e[48;5;15m        \e[48;5;0m   \e[48;5;15m      \e[48;5;0m   \e[m
 \e[48;5;0m   \e[48;5;15m      \e[48;5;0m   \e[48;5;15m        \e[48;5;0m   \e[48;5;15m      \e[48;5;0m   \e[m
 \e[48;5;0m   \e[48;5;15m      \e[38;5;15;48;5;255mâ–„â–„â–„\e[48;5;15m        \e[38;5;15;48;5;255mâ–„â–„â–„\e[48;5;15m      \e[48;5;0m   \e[m
 \e[48;5;0m   \e[48;5;15m                          \e[48;5;0m   \e[m
 \e[48;5;0m   \e[48;5;15m                          \e[48;5;0m   \e[m
 \e[48;5;0m   \e[38;5;66;48;5;15mâ–„â–„\e[48;5;15m                      \e[38;5;66;48;5;15mâ–„â–„\e[48;5;0m   \e[m
 \e[48;5;0m   \e[48;5;66m  \e[38;5;66;48;5;15mâ–„â–„â–„â–„â–„â–„â–„â–„â–„â–„â–„â–„â–„â–„â–„â–„â–„â–„â–„â–„â–„â–„\e[48;5;66m  \e[48;5;0m   \e[m
 \e[48;5;0m   \e[38;5;0;48;5;66mâ–„â–„\e[48;5;66m                      \e[38;5;0;48;5;66mâ–„â–„\e[48;5;0m   \e[m
 \e[49m  \e[48;5;0m   \e[38;5;0;48;5;66mâ–„â–„â–„â–„â–„â–„â–„â–„â–„â–„â–„â–„â–„â–„â–„â–„â–„â–„â–„â–„â–„â–„\e[48;5;0m   \e[49m  \e[m
 \e[49m    \e[49;38;5;0mâ–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€â–€\e[49m     \e[m";

echo "..."
echo "    --- Aseprite Compiler ---"

echo "ðŸ’» Computer Information"
os=$(uname)
cpu=$(uname -m)
echo "OS: $os"
echo "CPU: $cpu"

echo "ðŸ’¾ Checking Latest Aseprite..."
url=$(curl -s https://api.github.com/repos/aseprite/aseprite/releases/latest | grep browser_download_url | cut -d '"' -f 4)
version=$(curl -s https://api.github.com/repos/aseprite/aseprite/releases/latest | grep tag_name | cut -d '"' -f 4)
echo "Version: $version"
echo "URL: $url"



echo "Checking OS..."
if [ $os == "Darwin" ]
then
    echo "OS:âœ…  You're using macOS $cpu"
else
    echo "OS:â›” You're using $os. You can't install this version"
fi


echo "Checking CPU..."
if [ $cpu == "arm64" ]
then
    echo "OS:âœ…  You're using Silicon Mac $cpu"
else
    echo "OS:â›” Your CPU is $cpu. You can't install this version"
fi


echo "Checking Brew..."
echo -n "Brew:"
if [[ $(command -v brew) == "" ]]; then
    echo "â›” Not Installed"
    #echo "Installing Hombrew"
    #/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
else
    echo "âœ… Installed"
    #echo "Updating Homebrew"
    #brew update
fi

echo "Checking Xcode..."
if [[ $(ls -l /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk) == "" ]]; then
    echo "â›” Xcode Not Installed"
else
    echo "âœ… Xcode Installed"
fi

# if [ $isxcode == "" ]
# then
#     echo "OS:â›”  You dont have /Applications/Xcode"
# else
#     echo "OS:âœ… You have /Applications/Xcode"
# fi
